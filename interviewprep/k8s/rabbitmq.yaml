apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: nav-integration
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: gp2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: nav-integration
  labels:
    app: rabbitmq
    component: messaging
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12-management-alpine
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              name: nav-integration-config
              key: RABBITMQ_USERNAME
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: nav-integration-secrets
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_DEFAULT_VHOST
          value: "nav"
        # Enable publisher confirms and persistence
        - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
          value: "-rabbit consumer_timeout 300000"
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health/checks/virtual-hosts
            port: 15672
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health/checks/port-listener/5672
            port: 15672
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: rabbitmq-storage
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: nav-integration
  labels:
    app: rabbitmq
spec:
  type: ClusterIP
  ports:
  - port: 5672
    targetPort: 5672
    name: amqp
  - port: 15672
    targetPort: 15672
    name: management
  selector:
    app: rabbitmq
---
# NodePort service for external access to RabbitMQ Management UI
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-management
  namespace: nav-integration
  labels:
    app: rabbitmq
    service: management
spec:
  type: NodePort
  ports:
  - port: 15672
    targetPort: 15672
    nodePort: 31672
    name: management
  selector:
    app: rabbitmq