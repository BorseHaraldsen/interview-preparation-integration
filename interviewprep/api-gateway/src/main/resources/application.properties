# API Gateway Configuration
# NAV Integration Platform - Spring Cloud Gateway
#
# This gateway serves as the single entry point for the NAV integration platform,
# handling routing, security, rate limiting, and resilience patterns
# for multiple external systems with different protocols and formats.
#======================================================================

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Application Identity
spring.application.name=nav-api-gateway

# Cloud Gateway Configuration
spring.cloud.gateway.enabled=true
spring.cloud.gateway.discovery.locator.enabled=false
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# External Service URLs (configured via environment variables in Docker)
# These point to the different microservices with different data formats
FOLKEREGISTER_SERVICE_URL=${FOLKEREGISTER_SERVICE_URL:http://folkeregister-api:8080}
SKATTEETATEN_SERVICE_URL=${SKATTEETATEN_SERVICE_URL:http://skatteetaten-api:8080}
BANK_SERVICE_URL=${BANK_SERVICE_URL:http://bank-api:8080}
A_ORDNINGEN_SERVICE_URL=${A_ORDNINGEN_SERVICE_URL:http://a-ordningen-api:8080}
MAIN_APP_SERVICE_URL=${MAIN_APP_SERVICE_URL:http://app:8080}

# Redis Configuration for Rate Limiting
spring.redis.host=${REDIS_HOST:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=5
spring.redis.jedis.pool.min-idle=1

# Circuit Breaker Configuration (Resilience4J)
# Different settings for different external system characteristics
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=30s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3

# Folkeregister Circuit Breaker - Slower legacy system
resilience4j.circuitbreaker.instances.folkeregister-cb.baseConfig=default
resilience4j.circuitbreaker.instances.folkeregister-cb.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.folkeregister-cb.failureRateThreshold=40

# Skatteetaten Circuit Breaker - Very slow mainframe system
resilience4j.circuitbreaker.instances.skatteetaten-cb.baseConfig=default
resilience4j.circuitbreaker.instances.skatteetaten-cb.waitDurationInOpenState=120s
resilience4j.circuitbreaker.instances.skatteetaten-cb.failureRateThreshold=30
resilience4j.circuitbreaker.instances.skatteetaten-cb.slowCallDurationThreshold=5s

# Bank Circuit Breaker - Fast but strict
resilience4j.circuitbreaker.instances.bank-cb.baseConfig=default
resilience4j.circuitbreaker.instances.bank-cb.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.bank-cb.failureRateThreshold=60

# A-Ordningen Circuit Breaker - Batch processing system
resilience4j.circuitbreaker.instances.a-ordningen-cb.baseConfig=default
resilience4j.circuitbreaker.instances.a-ordningen-cb.waitDurationInOpenState=45s
resilience4j.circuitbreaker.instances.a-ordningen-cb.slowCallDurationThreshold=3s

# NAV App Circuit Breaker - Internal service
resilience4j.circuitbreaker.instances.nav-app-cb.baseConfig=default
resilience4j.circuitbreaker.instances.nav-app-cb.failureRateThreshold=70

# Timeout Configuration - Different timeouts for different service types
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=30s

# Folkeregister - Legacy system needs longer timeouts
spring.cloud.gateway.routes[0].id=folkeregister-timeout
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/gateway/folkeregister/**
spring.cloud.gateway.routes[0].metadata.response-timeout=45000
spring.cloud.gateway.routes[0].metadata.connect-timeout=10000

# Skatteetaten - Mainframe needs very long timeouts
spring.cloud.gateway.routes[1].id=skatteetaten-timeout
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/gateway/skatteetaten/**
spring.cloud.gateway.routes[1].metadata.response-timeout=60000
spring.cloud.gateway.routes[1].metadata.connect-timeout=15000

# Security Configuration - OAuth 2.0 Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:8080/auth/realms/nav}
spring.security.oauth2.resourceserver.jwt.audiences=nav-integration-api

# CORS Configuration for cross-origin requests
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true

# Actuator Configuration - Gateway-specific endpoints
management.endpoints.web.exposure.include=health,info,metrics,gateway,circuitbreakers,ratelimiters
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true
management.metrics.export.prometheus.enabled=true

# Distributed Tracing Configuration
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

# Logging Configuration
logging.level.no.nav.gateway=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.security=WARN
logging.level.io.github.resilience4j=INFO
logging.pattern.console=%d{HH:mm:ss} [GATEWAY] [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n

# Gateway-specific Settings
gateway.service.name=NAV Integration API Gateway
gateway.service.version=1.0.0
gateway.service.description=Single entry point for NAV integration platform

# Rate Limiting Settings - Requests per second by service type
gateway.ratelimit.folkeregister.replenish-rate=10
gateway.ratelimit.folkeregister.burst-capacity=20
gateway.ratelimit.skatteetaten.replenish-rate=3
gateway.ratelimit.skatteetaten.burst-capacity=5
gateway.ratelimit.bank.replenish-rate=15
gateway.ratelimit.bank.burst-capacity=30
gateway.ratelimit.a-ordningen.replenish-rate=8
gateway.ratelimit.a-ordningen.burst-capacity=15
gateway.ratelimit.internal.replenish-rate=50
gateway.ratelimit.internal.burst-capacity=100

# Request/Response Transformation Settings
gateway.transform.enable-request-logging=true
gateway.transform.enable-response-logging=true
gateway.transform.max-request-body-size=1MB
gateway.transform.max-response-body-size=10MB

# Health Check Settings
gateway.health.check-external-services=true
gateway.health.timeout-per-service=5s
gateway.health.aggregate-health=true